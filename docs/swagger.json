{
    "swagger": "2.0",
    "info": {
        "description": "Pixel-BD is an open-source online platform where anyone can upload, share, and showcase their pixel art creations with the community.",
        "title": "PixelDB",
        "contact": {
            "name": "Lukas Haible",
            "email": "lukas.haible@web.de"
        },
        "version": "0.1"
    },
    "host": "localhost:3000",
    "basePath": "/",
    "paths": {
        "/": {
            "get": {
                "description": "This is the base route. You can check, if the API is online.",
                "tags": [
                    "Base"
                ],
                "summary": "Hello",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.APIResponse"
                        }
                    }
                }
            }
        },
        "/user": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get the user Data, when passing your JWT-Token in the Heeader",
                "tags": [
                    "User"
                ],
                "summary": "Get User",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.UserResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new user account by accepting user details such as username, email, password, firstname and lastname.",
                "tags": [
                    "User"
                ],
                "summary": "Create User",
                "parameters": [
                    {
                        "description": "User Credentials",
                        "name": "credentials",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.UserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.APIResponse": {
            "type": "object",
            "properties": {
                "data": {},
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "dto.Data": {
            "type": "object",
            "properties": {
                "CreatedAt": {
                    "type": "string"
                },
                "Email": {
                    "type": "string"
                },
                "FirstName": {
                    "type": "string"
                },
                "ID": {
                    "type": "string"
                },
                "LastName": {
                    "type": "string"
                },
                "Role": {
                    "type": "string"
                },
                "Username": {
                    "type": "string"
                }
            }
        },
        "dto.ErrorResponse": {
            "type": "object",
            "properties": {
                "Error": {
                    "type": "string"
                },
                "Message": {
                    "type": "string",
                    "example": "Success"
                },
                "Status": {
                    "type": "string",
                    "example": "Error"
                }
            }
        },
        "dto.UserRequest": {
            "type": "object",
            "required": [
                "email",
                "firstName",
                "lastName",
                "password",
                "username"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string",
                    "maxLength": 20,
                    "minLength": 2
                },
                "lastName": {
                    "type": "string",
                    "maxLength": 20,
                    "minLength": 2
                },
                "password": {
                    "type": "string",
                    "maxLength": 70,
                    "minLength": 6
                },
                "username": {
                    "type": "string",
                    "maxLength": 20,
                    "minLength": 3
                }
            }
        },
        "dto.UserResponse": {
            "type": "object",
            "properties": {
                "Data": {
                    "$ref": "#/definitions/dto.Data"
                },
                "Message": {
                    "type": "string",
                    "example": "Created User"
                },
                "Status": {
                    "type": "string",
                    "example": "Success"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "Type \"Bearer\" followed by a space and JWT token.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}